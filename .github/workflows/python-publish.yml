# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout python code
      uses: actions/checkout@v2
      with:
        path: PythonOCP
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*.whl
      working-directory: ./PythonOCP
      
  binary:
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [386, amd64, arm, arm64]
        exclude:
          - goos: windows
            goarch: arm
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: 386
          - goos: darwin
            goarch: arm
            
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout CollaborationNode
      uses: actions/checkout@v2
      with:
        repository: OpenCollaborationPlatform/OCP
        path: OCP
    - name: Install Golang
      uses: actions/setup-go@v2
    - name: Build Node
      run: |
        go build -o ocp_${{matrix.goos}}_${{matrix.goarch}}
      working-directory: ./OCP
    - name: Checkout python code
      uses: actions/checkout@v2
      with:
        path: PythonOCP
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python binarysetup.py sdist bdist_wheel
        twine upload dist/*.whl
      working-directory: ./PythonOCP
